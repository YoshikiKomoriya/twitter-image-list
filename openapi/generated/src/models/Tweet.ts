/* tslint:disable */
/* eslint-disable */
/**
 * sample
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    Entities,
    EntitiesFromJSON,
    EntitiesFromJSONTyped,
    EntitiesToJSON,
    ExtendedEntities,
    ExtendedEntitiesFromJSON,
    ExtendedEntitiesFromJSONTyped,
    ExtendedEntitiesToJSON,
    Metadata,
    MetadataFromJSON,
    MetadataFromJSONTyped,
    MetadataToJSON,
    QuotedStatusPermalink,
    QuotedStatusPermalinkFromJSON,
    QuotedStatusPermalinkFromJSONTyped,
    QuotedStatusPermalinkToJSON,
    User,
    UserFromJSON,
    UserFromJSONTyped,
    UserToJSON,
} from './';

/**
 * ツイート
 * @export
 * @interface Tweet
 */
export interface Tweet {
    /**
     * 
     * @type {string}
     * @memberof Tweet
     */
    created_at: string;
    /**
     * 
     * @type {number}
     * @memberof Tweet
     */
    id: number;
    /**
     * 
     * @type {string}
     * @memberof Tweet
     */
    id_str: string;
    /**
     * 
     * @type {string}
     * @memberof Tweet
     */
    text?: string;
    /**
     * 
     * @type {string}
     * @memberof Tweet
     */
    full_text?: string;
    /**
     * 
     * @type {boolean}
     * @memberof Tweet
     */
    truncated: boolean;
    /**
     * 
     * @type {Array<number>}
     * @memberof Tweet
     */
    display_text_range?: Array<number>;
    /**
     * 
     * @type {Entities}
     * @memberof Tweet
     */
    entities: Entities;
    /**
     * 
     * @type {ExtendedEntities}
     * @memberof Tweet
     */
    extended_entities?: ExtendedEntities;
    /**
     * 
     * @type {Metadata}
     * @memberof Tweet
     */
    metadata?: Metadata;
    /**
     * 
     * @type {string}
     * @memberof Tweet
     */
    source: string;
    /**
     * 
     * @type {number}
     * @memberof Tweet
     */
    in_reply_to_status_id: number | null;
    /**
     * 
     * @type {string}
     * @memberof Tweet
     */
    in_reply_to_status_id_str: string | null;
    /**
     * 
     * @type {number}
     * @memberof Tweet
     */
    in_reply_to_user_id: number | null;
    /**
     * 
     * @type {string}
     * @memberof Tweet
     */
    in_reply_to_user_id_str: string | null;
    /**
     * 
     * @type {string}
     * @memberof Tweet
     */
    in_reply_to_screen_name: string | null;
    /**
     * 
     * @type {User}
     * @memberof Tweet
     */
    user?: User;
    /**
     * 
     * @type {string}
     * @memberof Tweet
     */
    geo: string | null;
    /**
     * 
     * @type {string}
     * @memberof Tweet
     */
    coordinates: string | null;
    /**
     * 
     * @type {Tweet}
     * @memberof Tweet
     */
    retweeted_status: Tweet;
    /**
     * 
     * @type {string}
     * @memberof Tweet
     */
    place: string | null;
    /**
     * 
     * @type {string}
     * @memberof Tweet
     */
    contributors: string | null;
    /**
     * 
     * @type {boolean}
     * @memberof Tweet
     */
    is_quote_status: boolean;
    /**
     * 
     * @type {number}
     * @memberof Tweet
     */
    quoted_status_id?: number;
    /**
     * 
     * @type {string}
     * @memberof Tweet
     */
    quoted_status_id_str?: string;
    /**
     * 
     * @type {QuotedStatusPermalink}
     * @memberof Tweet
     */
    quoted_status_permalink?: QuotedStatusPermalink;
    /**
     * 
     * @type {Tweet}
     * @memberof Tweet
     */
    quoted_status?: Tweet;
    /**
     * 
     * @type {number}
     * @memberof Tweet
     */
    retweet_count: number;
    /**
     * 
     * @type {number}
     * @memberof Tweet
     */
    favorite_count: number;
    /**
     * 
     * @type {boolean}
     * @memberof Tweet
     */
    favorited: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof Tweet
     */
    retweeted: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof Tweet
     */
    possibly_sensitive?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof Tweet
     */
    possibly_sensitive_appealable?: boolean;
    /**
     * 
     * @type {string}
     * @memberof Tweet
     */
    lang: string;
}

export function TweetFromJSON(json: any): Tweet {
    return TweetFromJSONTyped(json, false);
}

export function TweetFromJSONTyped(json: any, ignoreDiscriminator: boolean): Tweet {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'created_at': json['created_at'],
        'id': json['id'],
        'id_str': json['id_str'],
        'text': !exists(json, 'text') ? undefined : json['text'],
        'full_text': !exists(json, 'full_text') ? undefined : json['full_text'],
        'truncated': json['truncated'],
        'display_text_range': !exists(json, 'display_text_range') ? undefined : json['display_text_range'],
        'entities': EntitiesFromJSON(json['entities']),
        'extended_entities': !exists(json, 'extended_entities') ? undefined : ExtendedEntitiesFromJSON(json['extended_entities']),
        'metadata': !exists(json, 'metadata') ? undefined : MetadataFromJSON(json['metadata']),
        'source': json['source'],
        'in_reply_to_status_id': json['in_reply_to_status_id'],
        'in_reply_to_status_id_str': json['in_reply_to_status_id_str'],
        'in_reply_to_user_id': json['in_reply_to_user_id'],
        'in_reply_to_user_id_str': json['in_reply_to_user_id_str'],
        'in_reply_to_screen_name': json['in_reply_to_screen_name'],
        'user': !exists(json, 'user') ? undefined : UserFromJSON(json['user']),
        'geo': json['geo'],
        'coordinates': json['coordinates'],
        'retweeted_status': TweetFromJSON(json['retweeted_status']),
        'place': json['place'],
        'contributors': json['contributors'],
        'is_quote_status': json['is_quote_status'],
        'quoted_status_id': !exists(json, 'quoted_status_id') ? undefined : json['quoted_status_id'],
        'quoted_status_id_str': !exists(json, 'quoted_status_id_str') ? undefined : json['quoted_status_id_str'],
        'quoted_status_permalink': !exists(json, 'quoted_status_permalink') ? undefined : QuotedStatusPermalinkFromJSON(json['quoted_status_permalink']),
        'quoted_status': !exists(json, 'quoted_status') ? undefined : TweetFromJSON(json['quoted_status']),
        'retweet_count': json['retweet_count'],
        'favorite_count': json['favorite_count'],
        'favorited': json['favorited'],
        'retweeted': json['retweeted'],
        'possibly_sensitive': !exists(json, 'possibly_sensitive') ? undefined : json['possibly_sensitive'],
        'possibly_sensitive_appealable': !exists(json, 'possibly_sensitive_appealable') ? undefined : json['possibly_sensitive_appealable'],
        'lang': json['lang'],
    };
}

export function TweetToJSON(value?: Tweet | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'created_at': value.created_at,
        'id': value.id,
        'id_str': value.id_str,
        'text': value.text,
        'full_text': value.full_text,
        'truncated': value.truncated,
        'display_text_range': value.display_text_range,
        'entities': EntitiesToJSON(value.entities),
        'extended_entities': ExtendedEntitiesToJSON(value.extended_entities),
        'metadata': MetadataToJSON(value.metadata),
        'source': value.source,
        'in_reply_to_status_id': value.in_reply_to_status_id,
        'in_reply_to_status_id_str': value.in_reply_to_status_id_str,
        'in_reply_to_user_id': value.in_reply_to_user_id,
        'in_reply_to_user_id_str': value.in_reply_to_user_id_str,
        'in_reply_to_screen_name': value.in_reply_to_screen_name,
        'user': UserToJSON(value.user),
        'geo': value.geo,
        'coordinates': value.coordinates,
        'retweeted_status': TweetToJSON(value.retweeted_status),
        'place': value.place,
        'contributors': value.contributors,
        'is_quote_status': value.is_quote_status,
        'quoted_status_id': value.quoted_status_id,
        'quoted_status_id_str': value.quoted_status_id_str,
        'quoted_status_permalink': QuotedStatusPermalinkToJSON(value.quoted_status_permalink),
        'quoted_status': TweetToJSON(value.quoted_status),
        'retweet_count': value.retweet_count,
        'favorite_count': value.favorite_count,
        'favorited': value.favorited,
        'retweeted': value.retweeted,
        'possibly_sensitive': value.possibly_sensitive,
        'possibly_sensitive_appealable': value.possibly_sensitive_appealable,
        'lang': value.lang,
    };
}


